üìå Parte 1: Arquitectura del Pipeline en GCP (Google Cloud Platform)
Este pipeline est√° dise√±ado para extraer, transformar y cargar datos de la API de Spaceflight News en BigQuery utilizando Cloud Composer (Airflow).

üöÄ 1.1. Componentes Principales del Pipeline

Descripcion de Componentes:

* API Spaceflight News	Fuente de datos (art√≠culos, blogs, reportes).
* Cloud Composer (Airflow)	Orquestador de tareas que controla la ingesta y procesamiento.
* Cloud Storage (GCS)	Almacenamiento temporal de datos antes de cargarlos en BigQuery.
* BigQuery	Data Warehouse donde se almacena y transforma la informaci√≥n.
* Looker Studio (Opcional)	Visualizaci√≥n y an√°lisis de los datos procesados.

üîÑ 1.2. Flujo de Datos

  1Ô∏è‚É£ Extraccion de Datos

  Se consulta la API de Spaceflight News para obtener art√≠culos y blogs.
  Se maneja paginaci√≥n y rate limits con tenacity.
  Los datos se guardan como archivos JSON/CSV en Cloud Storage.

  2Ô∏è‚É£ Procesamiento en BigQuery

  Se carga la informaci√≥n desde GCS a BigQuery con GCSToBigQueryOperator.
  Se aplica limpieza y deduplicaci√≥n (MERGE).
  Se normalizan los datos en un modelo dimensional.

  3Ô∏è‚É£ Carga y Modelado en BigQuery
  Se estructuran los datos en tablas de hechos y dimensiones.
  Se particiona por fecha (published_at) para optimizar consultas.

  4Ô∏è‚É£ Visualizaci√≥n en Looker Studio (Opcional)

  Se crean dashboards para analizar tendencias en los art√≠culos.


1.3. Optimizaci√≥n y Buenas Pr√°cticas

‚úî Manejo de Errores y Reintentos

tenacity para manejar rate limits y errores en API.
try-except en las funciones de extracci√≥n.

‚úî Estrategia de Almacenamiento en BigQuery

Tablas particionadas por fecha (published_at).
Uso de MERGE en lugar de INSERT para evitar duplicados.

‚úî Monitoreo y Alertas

Logging en Stackdriver para monitorear fallos en Airflow.
Alertas en Cloud Monitoring en caso de fallos en el DAG.

